The User schema represents users (tutors and tutorees) in the application. It includes several fields: the name field captures the user's full name and is required. The tutor field is a Boolean indicating whether the user is a tutor, which is also required. The email field must contain a unique email address for each user and is required. The password field is where the user's password is stored in a hashed format and is required. The availability field is a 2D array that indicates the user's availability for tutoring sessions, with a default value set to indicate that all time slots are unavailable.

To collect data for the User schema, the registration process involves gathering the user's name, email, password, and tutor status. It is essential to ensure that the email is unique before saving a new user to the database. After registration, tutors can update their availability through a designated API endpoint, which stores the availability data as a 2D array representing the days of the week and available time slots.

Test cases for the application are designed to validate the user registration, login, and availability update processes. For registration tests, it is necessary to verify that a new user can register with valid details, that registration fails when attempting to use a duplicate email, and that registration also fails when any required fields are missing. Login tests involve checking that a user can log in with valid credentials while ensuring that invalid credentials lead to a failed login attempt. Availability update tests confirm that a valid tutor can successfully update their availability, while a non-tutor user attempting to update availability should fail. Lastly, tests for fetching tutors ensure that all tutors and their availability data can be retrieved correctly.

To run the data collection scripts, ensure that you have Node.js and MongoDB set up on your machine. Use the command npm start to run the application. Make sure to refer to the API documentation for detailed instructions on how to register users and update their availability.
